########################################
#  This file was generated by hdlmake  #
#  http://ohwr.org/projects/hdl-make/  #
########################################

TOP_MODULE := top
PROJECT := camlcd
PROJECT_FILE := $(PROJECT).
TOOL_PATH := /opt/eda-tools/gowin/v198_11/IDE/bin
TCL_INTERPRETER := gw_sh 
ifneq ($(strip $(TOOL_PATH)),)
TCL_INTERPRETER := $(TOOL_PATH)/$(TCL_INTERPRETER)
endif

SYN_FAMILY := GW2
SYN_FAMILY_SURFIX := A
SYN_DEVICE_PREFIX := LV
SYN_DEVICE := 18
SYN_DEVICE_VERSION := C
SYN_PACKAGE := PG256
SYN_GRADE := C8/I7

ifneq ($(wildcard $(PROJECT_FILE)),)
TCL_CREATE := $(TCL_OPEN)
endif

#target for performing local synthesis
all: bitstream

SOURCES_VerilogFile += src/fifo_hs/video_fifo.v 
SOURCES_VerilogFile += src/i2c_master/i2c_config.v 
SOURCES_VerilogFile += src/i2c_master/i2c_master_top.v 
SOURCES_VerilogFile += src/i2c_master/i2c_master_byte_ctrl.v 
SOURCES_VerilogFile += src/gowin_rpll/sys_pll.v 
SOURCES_VerilogFile += src/lut_ov5640_rgb565_480_272.v 
SOURCES_VerilogFile += src/i2c_master/i2c_master_defines.v 
SOURCES_VerilogFile += src/color_bar.v 
SOURCES_VerilogFile += src/gowin_rpll/cmos_pll.v 
SOURCES_VerilogFile += src/top.v 
SOURCES_VerilogFile += src/i2c_master/i2c_master_bit_ctrl.v 
SOURCES_VerilogFile += src/video_timing_data.v 
SOURCES_VerilogFile += src/i2c_master/timescale.v 
SOURCES_VerilogFile += src/cmos_8_16bit.v

SOURCES_SDCFile += src/lcd.sdc

SOURCES_CSTFile += src/top.cst

files.tcl:
		@$(foreach sourcefile, $(SOURCES_VerilogFile), echo "add_file $(sourcefile)" >> $@ &)
		@$(foreach sourcefile, $(SOURCES_SDCFile), echo "add_file $(sourcefile)" >> $@ &)
		@$(foreach sourcefile, $(SOURCES_CSTFile), echo "add_file $(sourcefile)" >> $@ &)

SYN_PRE_BITSTREAM_CMD := 
SYN_POST_BITSTREAM_CMD := 

bitstream.tcl:
		echo source files.tcl >> $@
		echo set_device -device_version                                   $(SYN_DEVICE_VERSION)                                   $(SYN_FAMILY)$(SYN_FAMILY_SURFIX)-$(SYN_DEVICE_PREFIX)$(SYN_DEVICE)$(SYN_PACKAGE)$(SYN_GRADE) >> $@
		echo set_option -output_base_name $(PROJECT)_proj >> $@
		echo set_option -top_module $(TOP_MODULE) >> $@
		echo set_option -use_sspi_as_gpio 1 >> $@
		echo run syn >> $@
		echo run pnr >> $@

bitstream: files.tcl bitstream.tcl
		$(SYN_PRE_BITSTREAM_CMD)
		$(TCL_INTERPRETER)$@.tcl
		$(SYN_POST_BITSTREAM_CMD)
		touch $@

CLEAN_TARGETS := $(LIBS) *.fs *.gprj.user *.gprj impl $(PROJECT_FILE)

clean:
		rm -rf $(CLEAN_TARGETS)
		rm -rf project synthesize translate map par bitstream
		rm -rf project.tcl synthesize.tcl translate.tcl map.tcl par.tcl bitstream.tcl files.tcl

mrproper: clean
		rm -rf $(PROJECT).fs

.PHONY: mrproper clean all
